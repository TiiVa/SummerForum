// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SummerForum.Api.DataAccess;

#nullable disable

namespace SummerForum.Api.DataAccess.Migrations
{
    [DbContext(typeof(SummerForumDbContext))]
    [Migration("20240702131555_First")]
    partial class First
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SummerForum.Api.DataAccess.Entities.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("SummerForum.Api.DataAccess.Entities.Discussion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.ToTable("Discussions");
                });

            modelBuilder.Entity("SummerForum.Api.DataAccess.Entities.Post", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DiscussionId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("StartedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("StartedById")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DiscussionId");

                    b.HasIndex("StartedById");

                    b.ToTable("Posts");
                });

            modelBuilder.Entity("SummerForum.Api.DataAccess.Entities.Reply", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int?>("PostId")
                        .HasColumnType("int");

                    b.Property<DateTime>("RepliedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("RepliedById")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PostId");

                    b.HasIndex("RepliedById");

                    b.ToTable("Replies");
                });

            modelBuilder.Entity("SummerForum.Api.DataAccess.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("SummerForum.Api.DataAccess.Entities.Discussion", b =>
                {
                    b.HasOne("SummerForum.Api.DataAccess.Entities.Department", "Department")
                        .WithMany("Discussions")
                        .HasForeignKey("DepartmentId");

                    b.Navigation("Department");
                });

            modelBuilder.Entity("SummerForum.Api.DataAccess.Entities.Post", b =>
                {
                    b.HasOne("SummerForum.Api.DataAccess.Entities.Discussion", "Discussion")
                        .WithMany("Posts")
                        .HasForeignKey("DiscussionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SummerForum.Api.DataAccess.Entities.User", "StartedBy")
                        .WithMany("Posts")
                        .HasForeignKey("StartedById")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Discussion");

                    b.Navigation("StartedBy");
                });

            modelBuilder.Entity("SummerForum.Api.DataAccess.Entities.Reply", b =>
                {
                    b.HasOne("SummerForum.Api.DataAccess.Entities.Post", null)
                        .WithMany("ListOfReplies")
                        .HasForeignKey("PostId");

                    b.HasOne("SummerForum.Api.DataAccess.Entities.User", "RepliedBy")
                        .WithMany("Replies")
                        .HasForeignKey("RepliedById")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RepliedBy");
                });

            modelBuilder.Entity("SummerForum.Api.DataAccess.Entities.Department", b =>
                {
                    b.Navigation("Discussions");
                });

            modelBuilder.Entity("SummerForum.Api.DataAccess.Entities.Discussion", b =>
                {
                    b.Navigation("Posts");
                });

            modelBuilder.Entity("SummerForum.Api.DataAccess.Entities.Post", b =>
                {
                    b.Navigation("ListOfReplies");
                });

            modelBuilder.Entity("SummerForum.Api.DataAccess.Entities.User", b =>
                {
                    b.Navigation("Posts");

                    b.Navigation("Replies");
                });
#pragma warning restore 612, 618
        }
    }
}
